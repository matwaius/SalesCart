{"ast":null,"code":"import SidebarLayoutVue from '@/layouts/SidebarLayout.vue';\nimport FooterLayoutVue from '@/layouts/FooterLayout.vue';\nimport FaturamentoPorDia from '../reports/FaturamentoPorDia.vue';\nimport VendasPorDiatesteVue from '@/reports/VendasPorDiateste.vue';\nimport FaturamentoTeste from '@/reports/Teste.vue';\nimport reports from '@/services/reports.ts';\nexport default {\n  name: 'Dashboard',\n  data: vm => ({\n    uf: {\n      UF: '',\n      VL_DOC: ''\n    },\n    UFS: [{\n      UF: 'SC',\n      VL_DOC: 787973.13\n    }, {\n      UF: 'RS',\n      VL_DOC: 3486.05\n    }, {\n      UF: 'PR',\n      VL_DOC: 1700\n    }, {\n      UF: 'MG',\n      VL_DOC: 54.43\n    }],\n    date: new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10),\n    date2: new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10),\n    dateFormatted: vm.formatDate(new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10)),\n    dateFormatted2: vm.formatDate(new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10)),\n    menu1: false,\n    menu2: false\n  }),\n  components: {\n    SidebarLayoutVue,\n    FooterLayoutVue,\n    FaturamentoPorDia,\n    VendasPorDiatesteVue,\n    FaturamentoTeste\n  },\n  computed: {\n    computedDateFormatted() {\n      return this.formatDate(this.date);\n    }\n\n  },\n  watch: {\n    date(val) {\n      this.dateFormatted = this.formatDate(this.date);\n    },\n\n    date2(val) {\n      this.dateFormatted = this.formatDate(this.date);\n    }\n\n  },\n  methods: {\n    formatDate(date) {\n      if (!date) return null;\n      const [year, month, day] = date.split('-');\n      return `${day}/${month}/${year}`;\n    },\n\n    parseDate(date) {\n      if (!date) return null;\n      const [day, month, year] = date.split('/');\n      return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\n    },\n\n    Filter() {\n      reports.ReportNFDepartureDayByUF(this.date, this.date2).then(response => {\n        console.log(response.data);\n        this.Ufs = response.data.catch(error => console.log(error));\n      }).catch(error => console.log(error));\n    }\n\n  },\n\n  mounted() {\n    /*    reports.Files().then(response => {\r\n          console.log(response)\r\n        })\r\n          .catch(error => console.log(error))*/\n  }\n\n};","map":{"version":3,"mappings":"AAyGA;AACA;AACA;AACA;AACA;AAEA;AAEA;EACAA,iBADA;EAEAC;IACAC;MACAC,MADA;MAEAC;IAFA,CADA;IAKAC;MAAAF;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,CADA,EAEA;MAAAD;MAAAC;IAAA,CAFA,EAGA;MAAAD;MAAAC;IAAA,CAHA,CALA;IAUAE,+FAVA;IAWAC,gGAXA;IAYAC,uHAZA;IAaAC,wHAbA;IAcAC,YAdA;IAeAC;EAfA,EAFA;EAmBAC;IACAC,gBADA;IAEAC,eAFA;IAGAC,iBAHA;IAIAC,oBAJA;IAKAC;EALA,CAnBA;EA0BAC;IACAC;MACA;IACA;;EAHA,CA1BA;EA+BAC;IACAd;MACA;IACA,CAHA;;IAIAC;MACA;IACA;;EANA,CA/BA;EAuCAc;IACAC;MACA;MAEA;MACA;IACA,CANA;;IAOAC;MACA;MAEA;MACA;IACA,CAZA;;IAaAC;MACAC;QACAC;QACA,yBACAC,KADA,CACAC,2BADA;MAEA,CAJA,EAKAD,KALA,CAKAC,2BALA;IAMA;;EApBA,CAvCA;;EA6DAC;IACA;AACA;AACA;AACA;EACA;;AAlEA","names":["name","data","uf","UF","VL_DOC","UFS","date","date2","dateFormatted","dateFormatted2","menu1","menu2","components","SidebarLayoutVue","FooterLayoutVue","FaturamentoPorDia","VendasPorDiatesteVue","FaturamentoTeste","computed","computedDateFormatted","watch","methods","formatDate","parseDate","Filter","reports","console","catch","error","mounted"],"sourceRoot":"src/views","sources":["Dashboard.vue"],"sourcesContent":["<template>\r\n  <app name=\"dashboard\">\r\n    <sidebar-layout-vue>\r\n\r\n<template>\r\n  <v-container>\r\n    <v-row>\r\n      <v-col\r\n        cols=\"12\"\r\n        lg=\"6\"\r\n      >\r\n        <v-menu\r\n          ref=\"menu1\"\r\n          v-model=\"menu1\"\r\n          :close-on-content-click=\"false\"\r\n          transition=\"scale-transition\"\r\n          offset-y\r\n          max-width=\"290px\"\r\n          min-width=\"auto\"\r\n        >\r\n          <template v-slot:activator=\"{ on, attrs }\">\r\n            <v-text-field\r\n              v-model=\"dateFormatted\"\r\n              label=\"Date\"\r\n              hint=\"YYYY-MM-DD format\"\r\n              persistent-hint\r\n              prepend-icon=\"mdi-calendar\"\r\n              v-bind=\"attrs\"\r\n              @blur=\"date = parseDate(dateFormatted)\"\r\n              v-on=\"on\"\r\n            ></v-text-field>\r\n          </template>\r\n          <v-date-picker\r\n            v-model=\"date\"\r\n            no-title\r\n            @input=\"menu1 = false\"\r\n          ></v-date-picker>\r\n        </v-menu>\r\n        <p>Date in ISO format: <strong>{{ date }}</strong></p>\r\n      </v-col>\r\n\r\n      <v-col\r\n        cols=\"12\"\r\n        lg=\"6\"\r\n      >\r\n        <v-menu\r\n          ref=\"menu2\"\r\n          v-model=\"menu2\"\r\n          :close-on-content-click=\"false\"\r\n          transition=\"scale-transition\"\r\n          offset-y\r\n          max-width=\"290px\"\r\n          min-width=\"auto\"\r\n        >\r\n          <template v-slot:activator=\"{ on, attrs }\">\r\n            <v-text-field\r\n              v-model=\"dateFormatted2\"\r\n              label=\"Date\"\r\n              hint=\"YYYY-MM-DD format\"\r\n              persistent-hint\r\n              prepend-icon=\"mdi-calendar\"\r\n              v-bind=\"attrs\"\r\n              @blur=\"date2 = parseDate(dateFormatted2)\"\r\n              v-on=\"on\"\r\n            ></v-text-field>\r\n          </template>\r\n          <v-date-picker\r\n            v-model=\"date2\"\r\n            no-title\r\n            @input=\"menu2 = false\"\r\n          ></v-date-picker>\r\n        </v-menu>\r\n        <p>Date in ISO format: <strong>{{ date2 }}</strong></p>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n  <v-btn color=\"warning\" dark @click=\"Filter\">Filtrar</v-btn>\r\n\r\n      <div class=\"d-flex\" align-right>\r\n        <FaturamentoTeste/>\r\n      </div>\r\n\r\n<table>\r\n<thead>\r\n  <tr>\r\n    <th>NOME</th>\r\n    <th>VALOR</th>\r\n  </tr>\r\n</thead>\r\n<tbody>\r\n  <tr v-for=\"uf of UFS\" :key=\"uf.UF\">\r\n    <td>{{ uf.UF }}</td>\r\n    <td>{{ uf.VL_DOC }}</td>\r\n  </tr>\r\n</tbody>\r\n</table>\r\n\r\n    </sidebar-layout-vue>\r\n    <footer-layout-vue></footer-layout-vue>\r\n  </app>\r\n</template>\r\n\r\n<script>\r\nimport SidebarLayoutVue from '@/layouts/SidebarLayout.vue'\r\nimport FooterLayoutVue from '@/layouts/FooterLayout.vue'\r\nimport FaturamentoPorDia from '../reports/FaturamentoPorDia.vue'\r\nimport VendasPorDiatesteVue from '@/reports/VendasPorDiateste.vue'\r\nimport FaturamentoTeste from '@/reports/Teste.vue'\r\n\r\nimport reports from '@/services/reports.ts'\r\n\r\nexport default {\r\n  name: 'Dashboard',\r\n  data: vm => ({\r\n    uf: {\r\n      UF: '',\r\n      VL_DOC: ''\r\n    },\r\n    UFS: [{ UF: 'SC', VL_DOC: 787973.13 },\r\n      { UF: 'RS', VL_DOC: 3486.05 },\r\n      { UF: 'PR', VL_DOC: 1700 },\r\n      { UF: 'MG', VL_DOC: 54.43 }\r\n    ],\r\n    date: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\r\n    date2: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\r\n    dateFormatted: vm.formatDate((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10)),\r\n    dateFormatted2: vm.formatDate((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10)),\r\n    menu1: false,\r\n    menu2: false\r\n  }),\r\n  components: {\r\n    SidebarLayoutVue,\r\n    FooterLayoutVue,\r\n    FaturamentoPorDia,\r\n    VendasPorDiatesteVue,\r\n    FaturamentoTeste\r\n  },\r\n  computed: {\r\n    computedDateFormatted () {\r\n      return this.formatDate(this.date)\r\n    }\r\n  },\r\n  watch: {\r\n    date (val) {\r\n      this.dateFormatted = this.formatDate(this.date)\r\n    },\r\n    date2 (val) {\r\n      this.dateFormatted = this.formatDate(this.date)\r\n    }\r\n  },\r\n  methods: {\r\n    formatDate (date) {\r\n      if (!date) return null\r\n\r\n      const [year, month, day] = date.split('-')\r\n      return `${day}/${month}/${year}`\r\n    },\r\n    parseDate (date) {\r\n      if (!date) return null\r\n\r\n      const [day, month, year] = date.split('/')\r\n      return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`\r\n    },\r\n    Filter () {\r\n      reports.ReportNFDepartureDayByUF(this.date, this.date2).then(response => {\r\n        console.log(response.data)\r\n        this.Ufs = response.data\r\n          .catch(error => console.log(error))\r\n      })\r\n        .catch(error => console.log(error))\r\n    }\r\n  },\r\n  mounted () {\r\n/*    reports.Files().then(response => {\r\n      console.log(response)\r\n    })\r\n      .catch(error => console.log(error))*/\r\n  }\r\n}\r\n\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}