{"ast":null,"code":"import FooterLayoutVue from '@/layouts/FooterLayout.vue';\nimport axios from 'axios';\nexport default {\n  name: 'ReportNFDepartureDayByUF',\n  data: vm => ({\n    list: undefined,\n    list2: [],\n    loaded: false,\n    date: new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10),\n    date2: new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10),\n    dateFormatted: vm.formatDate(new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10)),\n    dateFormatted2: vm.formatDate(new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10)),\n    menu1: false,\n    menu2: false,\n    chartData: {\n      labels: ['Janeiro', 'Fevereiro', 'Março'],\n      datasets: [{\n        label: 'Data One',\n        backgroundColor: '#f87979',\n        data: [40, 62, 12]\n      }]\n    }\n  }),\n  components: {\n    FooterLayoutVue\n  },\n  computed: {\n    computedDateFormatted() {\n      return this.formatDate(this.date);\n    }\n\n  },\n  watch: {\n    date(val) {\n      this.dateFormatted = this.formatDate(this.date);\n    },\n\n    date2(val) {\n      this.dateFormatted = this.formatDate(this.date);\n    }\n\n  },\n  methods: {\n    formatDate(date) {\n      if (!date) return null;\n      const [year, month, day] = date.split('-');\n      return `${day}/${month}/${year}`;\n    },\n\n    parseDate(date) {\n      if (!date) return null;\n      const [day, month, year] = date.split('/');\n      return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\n    },\n\n    FilterBKP() {\n      /*OK - Sem o moment para corrigir a data que está vindo datetime do backend */\n      axios.post('https://localhost:7258/api/ReportNFDepartureDayByUF?dateStart=' + this.date + '&dateEnd=' + this.date2).then(response => {\n        this.list = response.data;\n        this.loaded = true;\n        console.log(response.data);\n      }).catch(error => console.log(error));\n    },\n\n    Filter() {\n      /*Com o moment para corrigir a data que está vindo datetime do backend */\n      axios.post('https://localhost:7258/api/ReportNFDepartureDayByUF?dateStart=' + this.date + '&dateEnd=' + this.date2).then(response => {\n        this.list = response.data;\n        this.list.forEach(d => {\n          const {\n            UF,\n            VL_BRT\n          } = d;\n          this.list2.push({\n            UF,\n            VL_BRT\n          });\n        });\n        this.loaded = true;\n        console.log(response.data);\n        console.log('teste');\n        console.log(this.list2);\n      });\n    },\n\n    Return() {\n      this.$router.push('/reports');\n    },\n\n    mounted() {\n      this.loaded = false;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAsGA;AACA;AAEA;EACAA,gCADA;EAEAC;IACAC,eADA;IAEAC,SAFA;IAGAC,aAHA;IAIAC,+FAJA;IAKAC,gGALA;IAMAC,uHANA;IAOAC,wHAPA;IAQAC,YARA;IASAC,YATA;IAUAC;MACAC,yCADA;MAEAC,WACA;QACAC,iBADA;QAEAC,0BAFA;QAGAd;MAHA,CADA;IAFA;EAVA,EAFA;EAuBAe;IACAC;EADA,CAvBA;EA0BAC;IACAC;MACA;IACA;;EAHA,CA1BA;EA+BAC;IACAf;MACA;IACA,CAHA;;IAIAC;MACA;IACA;;EANA,CA/BA;EAuCAe;IACAC;MACA;MAEA;MACA;IACA,CANA;;IAOAC;MACA;MAEA;MACA;IACA,CAZA;;IAaAC;MAAA;MACAC,MACAC,IADA,CACA,uGADA,EACAC,IADA,CACAC;QACA;QACA;QACAC;MACA,CALA,EAMAC,KANA,CAMAC,2BANA;IAOA,CArBA;;IAsBAC;MAAA;MACAP,MACAC,IADA,CACA,uGADA,EACAC,IADA,CACAC;QACA;QAEA;UACA;YACAK,EADA;YAEAC;UAFA,IAGAC,CAHA;UAIA;YAAAF;YAAAC;UAAA;QACA,CANA;QAOA;QACAL;QACAA;QACAA;MACA,CAfA;IAiBA,CAxCA;;IAyCAO;MACA;IACA,CA3CA;;IA4CAC;MACA;IACA;;EA9CA;AAvCA","names":["name","data","list","list2","loaded","date","date2","dateFormatted","dateFormatted2","menu1","menu2","chartData","labels","datasets","label","backgroundColor","components","FooterLayoutVue","computed","computedDateFormatted","watch","methods","formatDate","parseDate","FilterBKP","axios","post","then","response","console","catch","error","Filter","UF","VL_BRT","d","Return","mounted"],"sourceRoot":"src/reports","sources":["ReportNFDepartureDayByUF.vue"],"sourcesContent":["<template>\r\n  <app name=\"ReportNFDepartureDayByUF\">\r\n    <div>\r\n      <h1>Relatório - AJUSTAR</h1>\r\n    <v-container   fluid >\r\n      <v-btn color=\"error\" dark @click=\"Return\">Retornar</v-btn>\r\n      <br/>\r\n      <br/>\r\n      <v-row>\r\n        <v-col\r\n          cols=\"3\"\r\n          lg=\"3\"\r\n        >\r\n          <v-menu\r\n            ref=\"menu1\"\r\n            v-model=\"menu1\"\r\n            :close-on-content-click=\"false\"\r\n            transition=\"scale-transition\"\r\n            offset-y\r\n            max-width=\"290px\"\r\n            min-width=\"auto\"\r\n          >\r\n            <template v-slot:activator=\"{ on, attrs }\">\r\n              <v-text-field\r\n                v-model=\"dateFormatted\"\r\n                label=\"Data Inicial\"\r\n                persistent-hint\r\n                prepend-icon=\"mdi-calendar\"\r\n                v-bind=\"attrs\"\r\n                @blur=\"date = parseDate(dateFormatted)\"\r\n                v-on=\"on\"\r\n              ></v-text-field>\r\n            </template>\r\n            <v-date-picker\r\n              v-model=\"date\"\r\n              no-title\r\n              @input=\"menu1 = false\"\r\n            ></v-date-picker>\r\n          </v-menu>\r\n        </v-col>\r\n        <v-col\r\n          cols=\"6\"\r\n          lg=\"3\"\r\n        >\r\n          <v-menu\r\n            ref=\"menu2\"\r\n            v-model=\"menu2\"\r\n            :close-on-content-click=\"false\"\r\n            transition=\"scale-transition\"\r\n            offset-y\r\n            max-width=\"290px\"\r\n            min-width=\"auto\"\r\n          >\r\n            <template v-slot:activator=\"{ on, attrs }\">\r\n              <v-text-field\r\n                v-model=\"dateFormatted2\"\r\n                label=\"Data Final\"\r\n                persistent-hint\r\n                prepend-icon=\"mdi-calendar\"\r\n                v-bind=\"attrs\"\r\n                @blur=\"date2 = parseDate(dateFormatted2)\"\r\n                v-on=\"on\"\r\n              ></v-text-field>\r\n            </template>\r\n            <v-date-picker\r\n              v-model=\"date2\"\r\n              no-title\r\n              @input=\"menu2 = false\"\r\n            ></v-date-picker>\r\n          </v-menu>\r\n        </v-col>\r\n      </v-row>\r\n    </v-container>\r\n  </div>\r\n\r\n  <v-container fluid>\r\n    <v-btn color=\"warning\" dark @click=\"Filter\">Filtrar</v-btn>\r\n  </v-container>\r\n\r\n  <v-container fluid>\r\n    <br/>\r\n    <table border = '1px'>\r\n      <tr>\r\n        <td>Data</td>\r\n        <td>Valor</td>\r\n      </tr>\r\n      <tr v-for=\"item in this.list2\" v-bind:key=\"item.UF\">\r\n        <td>{{item.UF}}</td>\r\n        <td>{{item.VL_DOC}}</td>\r\n      </tr>\r\n    </table>\r\n  </v-container>\r\n\r\n  <v-container>\r\n    <Bar :chart-data=\"chartData\" />\r\n  </v-container>\r\n\r\n  <footer-layout-vue></footer-layout-vue>\r\n  </app>\r\n</template>\r\n\r\n<script>\r\nimport FooterLayoutVue from '@/layouts/FooterLayout.vue'\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'ReportNFDepartureDayByUF',\r\n  data: vm => ({\r\n    list: undefined,\r\n    list2: [],\r\n    loaded: false,\r\n    date: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\r\n    date2: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\r\n    dateFormatted: vm.formatDate((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10)),\r\n    dateFormatted2: vm.formatDate((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10)),\r\n    menu1: false,\r\n    menu2: false,\r\n    chartData: {\r\n      labels: ['Janeiro', 'Fevereiro', 'Março'],\r\n      datasets: [\r\n        {\r\n          label: 'Data One',\r\n          backgroundColor: '#f87979',\r\n          data: [40, 62, 12]\r\n        }\r\n      ]\r\n    }\r\n  }),\r\n  components: {\r\n    FooterLayoutVue\r\n  },\r\n  computed: {\r\n    computedDateFormatted () {\r\n      return this.formatDate(this.date)\r\n    }\r\n  },\r\n  watch: {\r\n    date (val) {\r\n      this.dateFormatted = this.formatDate(this.date)\r\n    },\r\n    date2 (val) {\r\n      this.dateFormatted = this.formatDate(this.date)\r\n    }\r\n  },\r\n  methods: {\r\n    formatDate (date) {\r\n      if (!date) return null\r\n\r\n      const [year, month, day] = date.split('-')\r\n      return `${day}/${month}/${year}`\r\n    },\r\n    parseDate (date) {\r\n      if (!date) return null\r\n\r\n      const [day, month, year] = date.split('/')\r\n      return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`\r\n    },\r\n    FilterBKP () {/*OK - Sem o moment para corrigir a data que está vindo datetime do backend */\r\n      axios\r\n        .post('https://localhost:7258/api/ReportNFDepartureDayByUF?dateStart=' + this.date + '&dateEnd=' + this.date2).then(response => {\r\n          this.list = response.data\r\n          this.loaded = true\r\n          console.log(response.data)\r\n        }\r\n        ).catch(error => console.log(error))\r\n    },\r\n    Filter () {/*Com o moment para corrigir a data que está vindo datetime do backend */\r\n      axios\r\n        .post('https://localhost:7258/api/ReportNFDepartureDayByUF?dateStart=' + this.date + '&dateEnd=' + this.date2).then(response => {\r\n          this.list = response.data\r\n\r\n          this.list.forEach(d => {\r\n            const {\r\n              UF,\r\n              VL_BRT\r\n            } = d\r\n            this.list2.push({ UF, VL_BRT })\r\n          })\r\n          this.loaded = true\r\n          console.log(response.data)\r\n          console.log('teste')\r\n          console.log(this.list2)\r\n        }\r\n        )\r\n    },\r\n    Return () {\r\n      this.$router.push('/reports')\r\n    },\r\n    mounted () {\r\n      this.loaded = false\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}