{"ast":null,"code":"import SidebarLayoutVue from \"@/layouts/SidebarLayout.vue\";\nimport api from '@/services/api.ts';\nimport { watch } from 'vue';\nexport default {\n  name: \"FormList\",\n  components: {\n    SidebarLayoutVue\n  },\n  props: {\n    title: String,\n    tableHeader: [],\n    tableItems: [],\n    field_customerID: 0\n  },\n  data: () => ({\n    field_produto: [],\n    produtos: [],\n    field_quantidade: 0,\n    field_obs: \"\",\n    field_total: 0,\n    pageCount: 0,\n    pageNumber: 0,\n    formOrders: {\n      id: 0,\n      customerID: 0,\n      total_order: 0,\n      created_at: \"\",\n      comments: \"\"\n    },\n    formOrdersProduct: [{\n      orderID: 0,\n      productID: 0,\n      quantity: 0,\n      created_at: \"\",\n      unit_price: 0,\n      total_price: 0\n    }]\n  }),\n\n  created() {\n    this.getProducts();\n  },\n\n  methods: {\n    async getProducts() {\n      await api.get(`/Product`, this.formOrders).then(response => {\n        this.produtos = response.data;\n      }).catch(error => {\n        console.error(error.response);\n      });\n    },\n\n    async onSave() {\n      if (this.tableItems.length > 0) {\n        this.formOrders.id = 0;\n        this.formOrders.customerID = this.field_customerID;\n        this.formOrders.total_order = this.field_total;\n        this.formOrders.comments = this.field_obs;\n        await api.post(`/Orders`, this.formOrders).then(response => {\n          this.formOrders.id = response.data.id;\n        }).catch(error => {\n          console.error(error.response);\n        });\n\n        if (this.formOrders.id > 0) {\n          this.formOrdersProduct = [];\n\n          for (var i = 0; i < this.tableItems.length; i++) {\n            this.formOrdersProduct.push({\n              orderID: this.formOrders.id,\n              productID: this.tableItems[i].id,\n              quantity: this.tableItems[i].quantity,\n              created_at: \"\",\n              unit_price: this.tableItems[i].unit_price,\n              total_price: this.tableItems[i].total_price\n            });\n          }\n\n          await api.post(`/Order_Product`, this.formOrdersProduct).then(response => {\n            console.log(response.data);\n          }).catch(error => {\n            console.error(error.response);\n          });\n        } //Limpa\n\n\n        this.tableItems = [];\n        this.field_produto = [];\n        this.field_quantidade = 0;\n        this.field_obs = \"\";\n        this.field_total = 0;\n      }\n    },\n\n    onInsertItem() {\n      console.log(this.field_customerID);\n\n      if (this.validation() == true) {\n        this.tableItems.push({\n          id: this.field_produto.id,\n          name: this.field_produto.name,\n          quantity: this.field_quantidade,\n          unit_price: this.field_produto.price,\n          total_price: this.field_quantidade * this.field_produto.price\n        });\n        this.field_total += this.field_quantidade * this.field_produto.price;\n      }\n    },\n\n    onDeleteItem(item) {\n      this.field_total -= item.total_price;\n      this.tableItems.splice(this.tableItems.findIndex(f => f == item), 1);\n    },\n\n    validation() {\n      if (this.field_quantidade <= 0 || this.tableItems.findIndex(f => f.id == this.field_produto.id) >= 0) {\n        return false;\n      }\n\n      return true;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAsEA;AACA;AACA;AAEA;EACAA,gBADA;EAEAC;IACAC;EADA,CAFA;EAKAC;IACAC,aADA;IAEAC,eAFA;IAGAC,cAHA;IAIAC;EAJA,CALA;EAWAC;IACAC,iBADA;IAEAC,YAFA;IAGAC,mBAHA;IAIAC,aAJA;IAKAC,cALA;IAMAC,YANA;IAOAC,aAPA;IAQAC;MACAC,KADA;MAEAC,aAFA;MAGAC,cAHA;MAIAC,cAJA;MAKAC;IALA,CARA;IAgBAC;MACAC,UADA;MAEAC,YAFA;MAGAC,WAHA;MAIAL,cAJA;MAKAM,aALA;MAMAC;IANA;EAhBA,EAXA;;EAqCAC;IACA;EACA,CAvCA;;EAwCAC;IACA;MACA,2CACAC,IADA,CACAC;QACA;MACA,CAHA,EAIAC,KAJA,CAIAC;QACAC;MACA,CANA;IAOA,CATA;;IAUA;MAEA;QACA;QACA;QACA;QACA;QACA,2CACAJ,IADA,CACAC;UACA;QACA,CAHA,EAIAC,KAJA,CAIAC;UACAC;QACA,CANA;;QAOA;UACA;;UACA;YACA;cACAX,2BADA;cAEAC,gCAFA;cAGAC,qCAHA;cAIAL,cAJA;cAKAM,yCALA;cAMAC;YANA;UAQA;;UACA,yDACAG,IADA,CACAC;YACAG;UACA,CAHA,EAIAF,KAJA,CAIAC;YACAC;UACA,CANA;QAOA,CA/BA,CAiCA;;;QACA;QACA;QACA;QACA;QACA;MACA;IACA,CApDA;;IAqDAC;MACAD;;MACA;QACA;UAAAjB;UACAjB,6BADA;UAEAyB,+BAFA;UAGAC,oCAHA;UAIAC;QAJA;QAKA;MACA;IACA,CA/DA;;IAgEAS;MACA;MACA;IACA,CAnEA;;IAoEAC;MACA;QACA;MACA;;MACA;IACA;;EAzEA;AAxCA","names":["name","components","SidebarLayoutVue","props","title","tableHeader","tableItems","field_customerID","data","field_produto","produtos","field_quantidade","field_obs","field_total","pageCount","pageNumber","formOrders","id","customerID","total_order","created_at","comments","formOrdersProduct","orderID","productID","quantity","unit_price","total_price","created","methods","then","response","catch","error","console","onInsertItem","onDeleteItem","validation"],"sourceRoot":"src/components","sources":["FormList.vue"],"sourcesContent":["<template>\r\n  <sidebar-layout-vue>\r\n    <v-container class=\"fill-height flex-column\">\r\n        <v-card :width=\"800\"\r\n          height=\"100%\"\r\n          max-height=\"600\"\r\n          class=\"mx-auto\"\r\n          outilined\r\n          elevation=\"3\">\r\n          <v-container>\r\n            <!--CABEÇALHO-->\r\n            <v-row dense>\r\n              <v-col cols=\"12\">\r\n                <v-toolbar flat\r\n                        rounded\r\n                        dense\r\n                        class=\"blue-grey lighten-4\">\r\n                  <v-toolbar-title class=\"font-weight-medium\">{{title}}</v-toolbar-title> \r\n                </v-toolbar>\r\n              </v-col>\r\n            </v-row>\r\n            <!--ITEMS-->\r\n            <v-row dense>\r\n              <v-col>\r\n                <v-data-table no-data-text=\"Nenhum Registro Disponível\"\r\n                              no-results-text=\"Nenhum Registro Encontrado\"\r\n                              dense\r\n                              fixed-header\r\n                              height=\"352px\"\r\n                              class=\"elevation-3\"\r\n                              item-key=\"Id\"\r\n                              single-select\r\n                              hide-default-footer\r\n                              :headers=\"tableHeader\"\r\n                              :items=\"tableItems\"\r\n                              :items-per-page=\"10\">\r\n                  <template v-slot:item.actions=\"{item}\">\r\n                      <v-tooltip bottom color=\"primary\">\r\n                        <template v-slot:activator=\"{on, attrs}\">\r\n                          <v-icon small\r\n                              color=\"primary\"\r\n                              v-bind=\"attrs\"\r\n                              v-on=\"on\"\r\n                              class=\"mr-2\"\r\n                              :disabled=\"false\"\r\n                              @click=\"onDeleteItem(item)\">\r\n                              mdi-delete\r\n                          </v-icon>\r\n                        </template>\r\n                        <span>Excluir</span>\r\n                      </v-tooltip>\r\n                  </template>\r\n                </v-data-table>\r\n              </v-col>\r\n            </v-row>\r\n            <v-row dense justify=\"center\">\r\n              <v-pagination v-if=\"pageCount>0\"\r\n                    v-model=\"pageNumber\"\r\n                    circle\r\n                    prev-icon=\"mdi-menu-left\"\r\n                    next-icon=\"mdi-menu-right\"\r\n                    :length=\"pageCount\"></v-pagination>\r\n            </v-row>\r\n          </v-container>\r\n        </v-card>\r\n    </v-container>\r\n  </sidebar-layout-vue>\r\n</template>\r\n\r\n<script>\r\nimport SidebarLayoutVue from \"@/layouts/SidebarLayout.vue\";\r\nimport api from '@/services/api.ts';\r\nimport { watch } from 'vue';\r\n\r\nexport default {\r\n  name:\"FormList\",\r\n  components: {\r\n    SidebarLayoutVue\r\n  },\r\n  props: {\r\n      title: String,\r\n      tableHeader: [],\r\n      tableItems: [],\r\n      field_customerID:0\r\n  },\r\n  data: () => ({\r\n    field_produto: [],\r\n    produtos: [],\r\n    field_quantidade: 0,\r\n    field_obs:\"\",\r\n    field_total:0,\r\n    pageCount: 0,\r\n    pageNumber: 0,\r\n    formOrders: {\r\n      id:0,\r\n      customerID: 0,\r\n      total_order: 0,\r\n      created_at: \"\",\r\n      comments: \"\",\r\n     \r\n    },\r\n    formOrdersProduct: [{\r\n        orderID: 0,\r\n        productID: 0,\r\n        quantity: 0,\r\n        created_at: \"\",\r\n        unit_price: 0,\r\n        total_price: 0,\r\n      }]\r\n    \r\n  }),\r\n  created() {\r\n      this.getProducts();\r\n  },\r\n  methods:{\r\n    async getProducts(){\r\n      await api.get(`/Product`, this.formOrders)\r\n            .then((response) => {\r\n              this.produtos = response.data;\r\n            })\r\n            .catch((error) => {\r\n              console.error(error.response)\r\n            })\r\n    },\r\n    async onSave(){\r\n     \r\n      if(this.tableItems.length > 0){\r\n          this.formOrders.id = 0;\r\n          this.formOrders.customerID = this.field_customerID;\r\n          this.formOrders.total_order = this.field_total;\r\n          this.formOrders.comments = this.field_obs;\r\n          await api.post(`/Orders`,this.formOrders)\r\n                .then((response) => {\r\n                  this.formOrders.id = response.data.id;\r\n                })\r\n                .catch((error) => {\r\n                  console.error(error.response)\r\n                })\r\n          if(this.formOrders.id > 0){\r\n            this.formOrdersProduct = [];\r\n            for (var i = 0; i < this.tableItems.length; i++) {\r\n                this.formOrdersProduct.push({\r\n                  orderID: this.formOrders.id,\r\n                  productID: this.tableItems[i].id,\r\n                  quantity: this.tableItems[i].quantity,\r\n                  created_at: \"\",\r\n                  unit_price: this.tableItems[i].unit_price,\r\n                  total_price: this.tableItems[i].total_price,\r\n                })\r\n            }\r\n            await api.post(`/Order_Product`,this.formOrdersProduct)\r\n                    .then((response) => {\r\n                      console.log(response.data);\r\n                    })\r\n                    .catch((error) => {\r\n                      console.error(error.response)\r\n                    })     \r\n          }\r\n\r\n          //Limpa\r\n          this.tableItems=[];\r\n          this.field_produto= []\r\n          this.field_quantidade = 0;\r\n          this.field_obs = \"\";\r\n          this.field_total = 0;\r\n      }\r\n    },\r\n    onInsertItem(){\r\n        console.log(this.field_customerID);\r\n        if (this.validation() == true){\r\n            this.tableItems.push({id:this.field_produto.id,\r\n                              name:this.field_produto.name,\r\n                              quantity:this.field_quantidade,\r\n                              unit_price:this.field_produto.price,\r\n                              total_price:this.field_quantidade * this.field_produto.price});\r\n            this.field_total += this.field_quantidade * this.field_produto.price;\r\n        }\r\n    },\r\n    onDeleteItem(item){\r\n        this.field_total -= item.total_price;\r\n        this.tableItems.splice(this.tableItems.findIndex(f => f==item),1);      \r\n    },\r\n    validation(){\r\n        if(this.field_quantidade <= 0 || this.tableItems.findIndex(f => f.id==this.field_produto.id)>=0){\r\n          return false;\r\n        }\r\n        return true;\r\n    }\r\n  },\r\n\r\n}\r\n\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}