{"ast":null,"code":"import api from '@/services/api.ts';\nexport default {\n  name: 'Signin',\n  data: () => ({\n    valid: true,\n    formData: {\n      Login: '',\n      Password: ''\n    },\n    show1: false,\n    password: 'Password'\n  }),\n  methods: {\n    cleanForm() {\n      this.formData.Login = \"\";\n      this.formData.Password = \"\";\n    },\n\n    async getUser() {\n      api.post(\"/Signin\", this.formData).then(response => {\n        console.log(response);\n        this.$router.push({\n          name: \"Cart-Customer\",\n          params: {\n            id: 1\n          }\n        });\n      }).catch(error => {\n        console.error(error.response);\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAmDA;AACA;EACAA,cADA;EAGAC;IACAC,WADA;IAEAC;MACAC,SADA;MAEAC;IAFA,CAFA;IAMAC,YANA;IAOAC;EAPA,EAHA;EAYAC;IACAC;MACA;MACA;IACA,CAJA;;IAKA;MACAC,mCACAC,IADA,CACAC;QACAC;QACA;UACAb,qBADA;UAEAc;YACAC;UADA;QAFA;MAMA,CATA,EAUAC,KAVA,CAUAC;QACAJ;MACA,CAZA;IAaA;;EAnBA;AAZA","names":["name","data","valid","formData","Login","Password","show1","password","methods","cleanForm","api","then","response","console","params","id","catch","error"],"sourceRoot":"src/views","sources":["Signin.vue"],"sourcesContent":["<template>\r\n<v-container class=\"fill-height\" fluid>\r\n        <v-row justify=\"center\">\r\n          <v-col cols=\"12\" sm=\"8\" md=\"4\">\r\n            <v-card class=\"ml-12 mr-12\" ref=\"form\">\r\n              <v-card-text>\r\n\r\n                <h1 class=\"bold\">Login</h1>\r\n                <br/>\r\n\r\n                <v-form\r\n                    ref=\"form\"\r\n                    v-model=\"valid\"\r\n                    lazy-validation\r\n                  >\r\n\r\n                    <v-text-field\r\n                      v-model=\"formData.Login\"\r\n                      outlined\r\n                      label=\"Login\"\r\n                      required\r\n                      :value=\"formData.Login = (formData.Login == null) ? formData.Login : formData.Login.toUpperCase()\"\r\n                    ></v-text-field>\r\n\r\n                    <v-text-field\r\n                      v-model=\"formData.Password\"\r\n                      outlined\r\n                      :append-icon=\"show1 ? 'mdi-eye' : 'mdi-eye-off'\"\r\n                      :type=\"show1 ? 'text' : 'password'\"\r\n                      @click:append=\"show1 = !show1\"\r\n                      label=\"Senha\"\r\n                      :value=\"formData.Password = (formData.Password == null) ? formData.Password : formData.Password.toUpperCase()\"\r\n                      required\r\n                    ></v-text-field>\r\n\r\n                      <v-row justify='end'>\r\n                      <v-col class=\"text-right\">\r\n                        <v-btn color=\"primary\" class=\"mr-3\" @click=\"getUser\">Entrar</v-btn>\r\n                        <v-btn color=\"error\" class=\"mr-0\" @click=\"cleanForm\">Limpar</v-btn>\r\n                      </v-col>\r\n                    </v-row>\r\n\r\n                </v-form>\r\n              </v-card-text>\r\n            </v-card>\r\n          </v-col>\r\n        </v-row>\r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\nimport api from '@/services/api.ts';\r\nexport default {\r\n  name: 'Signin',\r\n\r\n  data: () => ({\r\n    valid: true,\r\n    formData: {\r\n      Login: '',\r\n      Password: ''\r\n    },\r\n    show1: false,\r\n    password: 'Password'\r\n  }),\r\n  methods: {\r\n    cleanForm () {\r\n      this.formData.Login = \"\"\r\n      this.formData.Password = \"\"\r\n    },\r\n    async getUser () {\r\n      api.post(\"/Signin\",this.formData)\r\n          .then((response) => {\r\n              console.log(response);\r\n              this.$router.push({\r\n                name: \"Cart-Customer\",\r\n                params:{\r\n                  id:1 \r\n                }\r\n            })\r\n          })\r\n          .catch((error) => {\r\n              console.error(error.response);\r\n          });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\nbold {\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}