{"ast":null,"code":"import api from '@/services/api.ts';\nexport default {\n  name: 'Signin',\n  data: () => ({\n    formData: {\n      userlogin: '',\n      password: '',\n      email: ''\n    },\n    show1: false,\n    password: 'Password',\n    loginRules: [v => v.length >= 4 || 'Min 4 characters', v => !!v || 'Login is required', v => v && v.length <= 10 || 'Login must be less than 10 characters'],\n    rules: {\n      required: value => !!value || 'Required.',\n      min: v => v.length >= 4 || 'Min 4 characters'\n    }\n  }),\n  methods: {\n    cleanForm() {\n      this.$refs.form.reset();\n    },\n\n    async getUser() {\n      console.log(this.formData);\n      this.$router.push('/home');\n      /*api.post(\"/Signin\",this.formData)\n      .then((response) => {\n            console.log(response.data)\n            this.$router.push('/home');\n        })\n        .catch((error) => {\n            console.log(error.response);\n        });\n       event.preventDefault();*/\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAgDA;AACA;EACAA,cADA;EAGAC;IACAC;MACAC,aADA;MAEAC,YAFA;MAGAC;IAHA,CADA;IAMAC,YANA;IAOAF,oBAPA;IAQAG,aACAC,wCADA,EAEAA,+BAFA,EAGAA,mEAHA,CARA;IAaAC;MACAC,yCADA;MAEAC;IAFA;EAbA,EAHA;EAqBAC;IACAC;MACA;IACA,CAHA;;IAIA;MACAC;MACA;MACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAGA;;EAjBA;AArBA","names":["name","data","formData","userlogin","password","email","show1","loginRules","v","rules","required","min","methods","cleanForm","console"],"sourceRoot":"src/views","sources":["Signin.vue"],"sourcesContent":["<template>\n<v-container class=\"fill-height\" fluid>\n        <v-row justify=\"center\">\n          <v-col cols=\"12\" sm=\"8\" md=\"4\">\n            <v-card class=\"ml-12 mr-12\" ref=\"form\">\n              <v-card-text>\n                <v-form\n                    ref=\"form\"\n                    v-model=\"valid\"\n                    lazy-validation\n                  >\n                  \n                    <v-text-field\n                      v-model=\"formData.userlogin\"\n                      outlined\n                      :rules=\"loginRules\"\n                      label=\"Login\"\n                      required\n                    ></v-text-field>\n\n                    <v-text-field\n                      v-model=\"formData.password\"\n                      outlined\n                      :append-icon=\"show1 ? 'mdi-eye' : 'mdi-eye-off'\"\n                      :type=\"show1 ? 'text' : 'password'\"\n                      :rules=\"[rules.required, rules.min]\"\n                      hint=\"At least 8 characters\"\n                      @click:append=\"show1 = !show1\"\n                      label=\"Senha\"\n                      required\n                    ></v-text-field>\n\n                      <v-row justify='end'>\n                      <v-col class=\"text-right\">\n                        <v-btn color=\"primary\" class=\"mr-3\" @click=\"getUser()\">Entrar</v-btn>\n                        <v-btn color=\"error\" class=\"mr-0\" @click=\"cleanForm\">Limpar</v-btn>\n                      </v-col>\n                    </v-row>\n\n                </v-form>\n              </v-card-text>\n            </v-card>\n          </v-col>\n        </v-row>\n    </v-container>\n</template>\n\n<script>\nimport api from '@/services/api.ts';\nexport default {\n  name: 'Signin',\n\n  data: () => ({\n      formData:{\n        userlogin: '',\n        password: '',\n        email:''\n      },\n        show1: false,\n        password: 'Password',\n        loginRules: [\n          v => v.length >= 4 || 'Min 4 characters',\n          v => !!v || 'Login is required',\n          v => (v && v.length <= 10) || 'Login must be less than 10 characters',\n        ],\n        rules: {\n          required: value => !!value || 'Required.',\n          min: v => v.length >= 4 || 'Min 4 characters',\n        },\n  }),\n  methods:{\n    cleanForm() {\n        this.$refs.form.reset()\n      },\n    async getUser(){\n      console.log(this.formData)\n       this.$router.push('/home');\n      /*api.post(\"/Signin\",this.formData)\n      .then((response) => {\n            console.log(response.data)\n            this.$router.push('/home');\n        })\n        .catch((error) => {\n            console.log(error.response);\n        });\n\n      event.preventDefault();*/\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}