{"ast":null,"code":"import api from '@/services/api.ts';\nexport default {\n  name: 'Signin',\n  data: () => ({\n    formData: {\n      userlogin: '',\n      password: '',\n      email: ''\n    },\n    show1: false,\n    show2: true,\n    show3: false,\n    show4: false,\n    password: 'Password',\n    rules: {\n      required: value => !!value || 'Required.',\n      min: v => v.length >= 8 || 'Min 8 characters',\n      emailMatch: () => `The email and password you entered don't match`\n    },\n    loginRules: [v => v.length >= 4 || 'Min 4 characters', v => !!v || 'Login is required', v => v && v.length <= 10 || 'Login must be less than 10 characters'],\n    emailRules: [v => !!v || 'E-mail is required', v => /.+@.+\\..+/.test(v) || 'E-mail must be valid']\n  }),\n  methods: {\n    validate() {\n      this.$refs.form.validate();\n    },\n\n    reset() {\n      this.$refs.form.reset();\n    },\n\n    resetValidation() {\n      this.$refs.form.resetValidation();\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAiDA;AACA;EACAA,cADA;EAGAC;IACAC;MACAC,aADA;MAEAC,YAFA;MAGAC;IAHA,CADA;IAMAC,YANA;IAOAC,WAPA;IAQAC,YARA;IASAC,YATA;IAUAL,oBAVA;IAWAM;MACAC,yCADA;MAEAC,6CAFA;MAGAC;IAHA,CAXA;IAgBAC,aACAC,wCADA,EAEAA,+BAFA,EAGAA,mEAHA,CAhBA;IAqBAC,aACAD,gCADA,EAEAA,kDAFA;EArBA,EAHA;EA8BAE;IACAC;MACA;IACA,CAHA;;IAIAC;MACA;IACA,CANA;;IAOAC;MACA;IACA;;EATA;AA9BA","names":["name","data","formData","userlogin","password","email","show1","show2","show3","show4","rules","required","min","emailMatch","loginRules","v","emailRules","methods","validate","reset","resetValidation"],"sourceRoot":"src/views","sources":["Signin.vue"],"sourcesContent":["<template>\n<div class=\"container\">    \n    <div class=\"content\">\n        <v-form\n            ref=\"form\"\n            v-model=\"valid\"\n            lazy-validation\n          >\n          \n            <label>Login</label>\n            <v-text-field\n              v-model=\"formData.userlogin\"\n              outlined\n              :rules=\"loginRules\"\n              required\n            ></v-text-field>\n\n            <label>Senha</label>\n            <v-text-field\n              v-model=\"formData.password\"\n              outlined\n              :append-icon=\"show1 ? 'mdi-eye' : 'mdi-eye-off'\"\n              :type=\"show1 ? 'text' : 'password'\"\n              :rules=\"[rules.required, rules.min]\"\n              hint=\"At least 8 characters\"\n              counter\n              @click:append=\"show1 = !show1\"\n              required\n            ></v-text-field>\n\n            <label>Email</label>\n            <v-text-field\n              v-model=\"formData.email\"\n              outlined\n              :rules=\"emailRules\"\n              label=\"E-mail\"\n              required\n            ></v-text-field>\n\n            <v-btn color=\"primary\" class=\"mr-4\" @click=\"login\">Entrar</v-btn>\n\n            <v-btn color=\"error\" class=\"mr-4\" @click=\"reset\">Limpar</v-btn>\n\n        </v-form>\n    </div>\n</div>\n</template>\n\n<script>\nimport api from '@/services/api.ts';\nexport default {\n  name: 'Signin',\n\n  data: () => ({\n     formData:{\n        userlogin: '',\n        password: '',\n        email:''\n      },\n        show1: false,\n        show2: true,\n        show3: false,\n        show4: false,\n        password: 'Password',\n        rules: {\n          required: value => !!value || 'Required.',\n          min: v => v.length >= 8 || 'Min 8 characters',\n          emailMatch: () => (`The email and password you entered don't match`),\n        },\n        loginRules: [\n          v => v.length >= 4 || 'Min 4 characters',\n          v => !!v || 'Login is required',\n          v => (v && v.length <= 10) || 'Login must be less than 10 characters',\n        ],\n        emailRules: [\n          v => !!v || 'E-mail is required',\n          v => /.+@.+\\..+/.test(v) || 'E-mail must be valid',\n        ]\n      \n  }),\n  methods: {\n      validate () {\n        this.$refs.form.validate()\n      },\n      reset () {\n        this.$refs.form.reset()\n      },\n      resetValidation () {\n        this.$refs.form.resetValidation()\n      },\n    }\n}\n</script>\n\n<style scoped>\n\n .container{\n    width: 100vw;\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin: 0;\n    margin-right: 0;\n    padding: 0;\n  }\n\n  .content{\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    align-items: center;\n    justify-content: center;\n    width: 600px;\n  }\n  .v-text-field{\n      width: 400px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}